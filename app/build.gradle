apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdk project.compileSdkVersion

    // Add Kotlin source directory to all source sets
    sourceSets.each {
        it.java.srcDirs += "src/$it.name/kotlin"
    }

    defaultConfig {
        applicationId "com.rayworks.droidweekly"
        minSdkVersion project.minSdkVersion
        targetSdkVersion project.targetSdkVersion
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    signingConfigs {
        app {
            storeFile file("../keystore")
            storePassword "$dwPwd"
            keyAlias "$dwAlias"
            keyPassword "$dwPwd"
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.app
        }
    }

    viewBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }

    dataBinding {
        enabled = true
    }

    packagingOptions {
        pickFirst 'META-INF/kotlinx-io.kotlin_module'
        pickFirst 'META-INF/kotlinx-coroutines-io.kotlin_module'
        exclude 'META-INF/MANIFEST.MF'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE-notice.md'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.md'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.2'
    }

    flavorDimensions "product"

    productFlavors {
        Prod {
            dimension "product"

        }

        Dev {
            dimension "product"
            applicationIdSuffix ".dev"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Compose Bom
    def composeBom = platform('androidx.compose:compose-bom:2023.10.01')
    implementation composeBom
    androidTestImplementation composeBom

    // Material Design 3
    implementation 'androidx.compose.material3:material3'
    implementation "androidx.compose.ui:ui"

    // Android Studio Preview support
    implementation 'androidx.compose.ui:ui-tooling-preview'
    debugImplementation 'androidx.compose.ui:ui-tooling'

    // UI Tests
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'

    // Integration with activities
    implementation 'androidx.activity:activity-compose:1.8.1'

    // Integration with ViewModels
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.6.2'

    implementation("io.coil-kt:coil-compose:2.2.2")

    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.1"

    kapt "com.android.databinding:compiler:$android_gradle_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    implementation 'androidx.activity:activity-ktx:1.8.1'
    implementation 'com.google.android.material:material:1.10.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    implementation 'com.github.yalantis:ucrop:2.2.6'

    implementation 'com.makeramen:roundedimageview:2.3.0'
    implementation 'com.jakewharton.timber:timber:5.0.1'
    implementation "org.jsoup:jsoup:$jsoup_version"
    implementation "com.google.code.gson:gson:2.9.1"

    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"

    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    implementation "androidx.savedstate:savedstate:1.1.0"
    implementation 'androidx.lifecycle:lifecycle-viewmodel-savedstate:2.3.1'

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kt_coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kt_coroutines"

    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    kapt "androidx.hilt:hilt-compiler:$hilt_androidx_version"

    // test dependencies
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:4.0.0'
    testImplementation 'androidx.arch.core:core-testing:2.2.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.1'

    androidTestImplementation 'de.mannodermaus.junit5:android-test-core:1.2.2'
    androidTestRuntimeOnly 'de.mannodermaus.junit5:android-test-runner:1.2.2'

    // spek
    testImplementation "org.spekframework.spek2:spek-dsl-jvm:$spek_version"
    testImplementation "org.spekframework.spek2:spek-runner-junit5:$spek_version"
    // spek requires kotlin-reflect, omit when already in classpath
    testImplementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    // assertion
    testImplementation "org.jetbrains.kotlin:kotlin-test:1.7.10"

    // Test helpers for LiveData
    testImplementation 'androidx.arch.core:core-testing:2.2.0'

    // Test helpers for Room
    testImplementation "androidx.room:room-testing:$room_version"
}
